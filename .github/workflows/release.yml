# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5  # ✅ CORRIGÉ: v4 → v5
      with:
        go-version: '1.21'
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        BINARY_NAME=archits
        if [ "$GOOS" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        go build -ldflags "-s -w" -o dist/archits-${GOOS}-${GOARCH}${GOOS:+$([ "$GOOS" = "windows" ] && echo ".exe" || echo "")} .
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4  # ✅ CORRIGÉ: v3 → v4
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}  # ✅ CORRIGÉ: nom unique
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4  # ✅ CORRIGÉ: v3 → v4
      with:
        path: dist/
        merge-multiple: true  # ✅ AJOUTÉ: fusion des artifacts
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2  # ✅ CORRIGÉ: v1 → v2
      with:
        files: dist/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: [build, release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # ✅ AMÉLIORÉ: 18 → 20 (LTS actuelle)
        registry-url: 'https://registry.npmjs.org'
    
    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Update NPM package version
      run: |
        cd npm-package  # ✅ CORRIGÉ: utilise directement npm-package/
        sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract_version.outputs.version }}\"/" package.json
    
    - name: Publish to NPM
      run: |
        cd npm-package
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}